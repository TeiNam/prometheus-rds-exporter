---
#  yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: deployment tests
templates:
  - deployment.yaml
tests:
  - it: render default deployment
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-prometheus-rds-exporter-chart
      - equal:
          path: spec.template.spec.containers[0].image
          value: public.ecr.aws/TeiNam/prometheus-rds-exporter:0.0.0
      - equal:
          path: spec.replicas
          value: 1
      - notExists:
          path: spec.template.spec.priorityClassName
  - it: render deployment with image tag
    values:
      - ./values/with_image_tag.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: public.ecr.aws/TeiNam/prometheus-rds-exporter:1.0
  - it: render deployment with environment variables
    values:
      - ./values/with_environment_variables.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: variable1
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: value1
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: variable2
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: value2
  - it: render with additional labels
    values:
      - ./values/with_additional_labels.yaml
    asserts:
      - equal:
          path: metadata.labels.label1
          value: value1
      - equal:
          path: metadata.labels.label2
          value: value2
  - it: render with AWS credentials secret
    values:
      - ./values/with_awsCredentialsSecret.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: AWS_ACCESS_KEY_ID
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: my_aws_credentials
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: AWS_ACCESS_KEY_ID
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: AWS_SECRET_ACCESS_KEY
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.name
          value: my_aws_credentials
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.key
          value: AWS_SECRET_ACCESS_KEY
  - it: render with priorityClass
    values:
      - ./values/with_deployment_priorityclass.yaml
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: high-priority
